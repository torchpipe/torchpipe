batching_timeout = 10 #默认的凑batch的超时时间
precision = "fp16" 
instance_num=3
#### main graph ####
[jpg_decoder]
backend = "Sequential[DecodeTensor,(result2other)cvtColorTensor,ResizePadTensor,SyncTensor]"
color = "bgr"
instance_num = 10
data_format="hwc"
max_h = 640
max_w = 640

next = "detect"

[detect]
backend = "S[TensorrtTensor,SyncTensor]" 
batching_timeout = 5
instance_num = 1
max = 8

std="255,255,255"

model = "./yolov8n.onnx" 
"model::cache" = "./yolov8n.trt" 


next="post_det"
[post_det]
net_h=640
net_w=640 # for PostProcYolox
backend="SyncTensor[PostProcYoloV8]"
next = "sub_graph"
instance_num = 8

[sub_graph] 
map="jpg_decoder[other:data,color:color],post_det[TASK_BOX_KEY:TASK_BOX_KEY]"

backend = "MapReduce"
jump="cls_preprocess"

split="TASK_BOX_KEY"
merge="score_1,result"

next="final"
instance_num=20

[final]



#### sub graph ####
[cls_preprocess]
backend="Sequential[PPLCropTensor,PPLResizeTensor,cvtColorTensor,SyncTensor]"
resize_h=224
resize_w=224
color="rgb"
instance_num=8
# save_dir="./"

next="cls_1"

#### branch 1 ####
[cls_1]
mean = "123.675, 116.28, 103.53" # 255*"0.485, 0.456, 0.406"
std = "58.395, 57.120, 57.375" # 255*"0.229, 0.224, 0.225"
backend="S[TensorrtTensor,SoftmaxArgMaxTensor,SyncTensor]"
max=4
model="./resnet18.onnx"
"model::cache"="./resnet18.trt"

# postprocessor="SoftmaxArgMax"

next="post_cls_1"

[post_cls_1]
filter="filter_score"

mean = "123.675, 116.28, 103.53" # 255*"0.485, 0.456, 0.406"
std = "58.395, 57.120, 57.375" # 255*"0.229, 0.224, 0.225"
backend="S[TensorrtTensor,SoftmaxArgMaxTensor,SyncTensor]"
max=4
model="././resnet18.onnx"
"model::cache"="./resnet18.trt"

# postprocessor="SoftmaxArgMax"


next="subgraph_final"

#### branch 2 ####


[subgraph_final]
map="post_cls_1[score:score_1,result:data]"
 

