# Schedule'parameter
batching_timeout = 5 #默认的凑batch的超时时间
precision = "fp16" 
[jpg_decoder]
filter="run"
backend = "SyncTensor[ Sequential[DecodeTensor,ResizeTensor,cvtColorTensor]  ]" # 需要处理背景线程cuda流同步问题可用SyncTensor， 否则可用Sequential；SyncTensor确保初始化和前向在同一个线程时，能准确处理多个backend的同步时机
resize_h = 224 
resize_w = 224 

instance_num = 8
color = "rgb"
next = "cpu_decoder"

[cpu_decoder]
backend = " Sequential[DecodeMat,ResizeMat,cvtColorMat,Mat2Tensor,SyncTensor]  " # 需要处理背景线程cuda流同步问题可用SyncTensor， 否则可用Sequential；SyncTensor确保初始化和前向在同一个线程时，能准确处理多个backend的同步时机
filter = "or" 
resize_h = 224 
resize_w = 224 
instance_num = 8

color = "rgb"
next = "resnet50"

[resnet50]

backend = "SyncTensor[TensorrtTensor]" # 需要处理背景线程cuda流同步问题可用SyncTensor， SyncTensor确保初始化和前向在同一个线程时，能准确处理cuda流同步时机;注意DynamicTensorrtTensor本身也可以正确处理。

max = "16;16;16x3x224x224"
min = "16;9;1x3x224x224"
instance_num=4
# or max='4'
model = "./resnet50.onnx" # or resnet50_merge_mean_std_by_onnx.onnx

mean = "123.675, 116.28, 103.53" # 255*"0.485, 0.456, 0.406"
std = "58.395, 57.120, 57.375" # 255*"0.229, 0.224, 0.225"

"model::cache" = "./resnet50_gpu.trt" # or ./resnet50.trt.encrypted
