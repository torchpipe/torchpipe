batching_timeout = 10 #默认的凑batch的超时时间
precision = "fp16" 
instance_num=5
#### main graph ####
[jpg_decoder]
backend = "Sequential[DecodeTensor,(result2other)cvtColorTensor,ResizePadTensor,SyncTensor]"
color = "bgr"
instance_num = 10
max_h = 416
max_w = 416
# next="detect"

[detect]
backend = "S[TensorrtTensor, PostProcYolox,SyncTensor]" 
batching_timeout = 5 #默认的凑batch的超时时间
instance_num = 1
max = 8
 
net_h=416
net_w=416
model = "../../../examples/yolox/yolox_tiny.onnx" 
"model::cache" = "./yolox_tiny.trt" 
# postprocessor = "BatchingPostProcYolox_45_30" 
"model::timingcache"="./yolox_tiny.timingcache"


#### sub graph ####
[cls_preprocess]
backend="Sequential[CropTensor,ResizeTensor,cvtColorTensor,SyncTensor]"
resize_h=224
resize_w=224
color="rgb"
instance_num=8
next="remove_extra_key_cls_preprocess"
[remove_extra_key_cls_preprocess]
map="[result:data]"
# save_dir="./"


#### branch 1 ####
[cls_1]
mean = "123.675, 116.28, 103.53" # 255*"0.485, 0.456, 0.406"
std = "58.395, 57.120, 57.375" # 255*"0.229, 0.224, 0.225"
backend="S[TensorrtTensor,SoftmaxArgMaxTensor,SyncTensor]"
max=8
model="./resnet18.onnx"
"model::cache"="./resnet18_8.trt"
"model::timingcache"="resnet18.timingcache"

instance_num=3
# postprocessor="SoftmaxArgMax"


[post_cls_1]

mean = "123.675, 116.28, 103.53" # 255*"0.485, 0.456, 0.406"
std = "58.395, 57.120, 57.375" # 255*"0.229, 0.224, 0.225"
backend="S[TensorrtTensor,SoftmaxArgMaxTensor,SyncTensor]"
max=4
model="././resnet50.onnx"
"model::cache"="./resnet50.trt"
"model::timingcache"="resnet50.timingcache"

instance_num=3
# postprocessor="SoftmaxArgMax"



#### branch 2 ####

[cls_2]

mean = "123.675, 116.28, 103.53" # 255*"0.485, 0.456, 0.406"
std = "58.395, 57.120, 57.375" # 255*"0.229, 0.224, 0.225"
backend="S[TensorrtTensor,SoftmaxArgMaxTensor,SyncTensor]"
max="16;16;16"
min="16;16;1"
model="././fastervit_0_224_224.onnx"
"model::cache"="./fastervit_0_224_224.trt"
"model::timingcache"="fastervit_0_224_224.timingcache"

instance_num=3
# postprocessor="SoftmaxArgMax"
batching_timeout=10

